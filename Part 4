<!--
Name: Mustafa Mohd
File: bouncing_balls.html
Date: April 2nd 2025
A JavaScript-based animation that creates bouncing balls with dynamic movement.
-->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bouncing Balls</title>
    <style>
        body {
            margin: 0;
            overflow: hidden;
            background-color: black;
        }
        canvas {
            display: block;
        }
    </style>
</head>
<body>
    <canvas id="ballCanvas"></canvas>
    <script>
        const canvas = document.getElementById('ballCanvas');
        const ctx = canvas.getContext('2d');
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        class Ball {
            constructor(x, y, velX, velY, color, size) {
                this.x = x;
                this.y = y;
                this.velX = velX;
                this.velY = velY;
                this.color = color;
                this.size = size;
            }
            draw() {
                ctx.beginPath();
                ctx.fillStyle = this.color;
                ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
                ctx.fill();
            }
            update() {
                if ((this.x + this.size) >= canvas.width || (this.x - this.size) <= 0) {
                    this.velX = -this.velX;
                }
                if ((this.y + this.size) >= canvas.height || (this.y - this.size) <= 0) {
                    this.velY = -this.velY;
                }
                this.x += this.velX;
                this.y += this.velY;
            }
        }

        const balls = [];
        for (let i = 0; i < 10; i++) {
            let size = Math.random() * 20 + 10;
            let ball = new Ball(
                Math.random() * (canvas.width - size * 2) + size,
                Math.random() * (canvas.height - size * 2) + size,
                Math.random() * 4 - 2,
                Math.random() * 4 - 2,
                `rgb(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255})`,
                size
            );
            balls.push(ball);
        }

        function loop() {
            ctx.fillStyle = 'rgba(0, 0, 0, 0.25)';
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            for (const ball of balls) {
                ball.draw();
                ball.update();
            }
            requestAnimationFrame(loop);
        }

        loop();
    </script>
</body>
</html>
